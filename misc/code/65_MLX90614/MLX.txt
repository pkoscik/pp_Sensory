/* Private define ------------------------------------------------------------*/
/* USER CODE BEGIN PD */
#define EMISIVITY 0.985
/* USER CODE END PD */


/* USER CODE BEGIN PV */
uint16_t ambient_tmp;
uint16_t obj_tmp;
float ambient_tmp_cel;
float obj_tmp_cel;
float ambient_tmp_celsult;
float obj_tmp_celsult;
uint8_t tmp[2];
char buf[80];
uint8_t len;
/* USER CODE END PV */



/* USER CODE BEGIN PFP */
uint8_t crc8(uint8_t InCrc, uint8_t InData);
/* USER CODE END PFP */


/* USER CODE BEGIN 2 */
  if(EMISIVITY>0.1 && EMISIVITY<1)//Setting emisivity
  {
	    uint16_t new_emissivity = (uint16_t)round(65535.0 * EMISIVITY);
	    uint8_t Crc;
	  	uint8_t tmp_emis[3];
	  	uint8_t Address =0x24;

	  	Crc = crc8(0, (0x5A)<<1);
	  	Crc = crc8(Crc, Address);
	  	Crc = crc8(Crc, 0);
	  	Crc = crc8(Crc, 0);

	  	tmp_emis[0] = new_emissivity & 0xFF;
	  	tmp_emis[1] = new_emissivity>>8;
	  	tmp_emis[2] = Crc;
  	HAL_I2C_Mem_Write(&hi2c1, (0x5A)<<1, Address, 1, tmp_emis, 3, 10);
  	HAL_Delay(10);

	  	Crc = crc8(0, (0x5A)<<1);
	  	Crc = crc8(Crc, Address);
	  	Crc = crc8(Crc, new_emissivity & 0xFF);
	  	Crc = crc8(Crc, new_emissivity>>8);

	  	tmp_emis[0] = new_emissivity & 0xFF;
	  	tmp_emis[1] = new_emissivity>>8;
	  	tmp_emis[2] = Crc;
  	HAL_I2C_Mem_Write(&hi2c1, (0x5A)<<1, Address, 1, tmp_emis, 3, 10);
  	HAL_Delay(10); // Writing time ~5ms;
  }
  /* USER CODE END 2 */


 /* USER CODE BEGIN WHILE */
  while (1)
  {
    /* USER CODE END WHILE */
	  if(HAL_I2C_Mem_Read(&hi2c1,(0x5A)<<1,0x06,1,tmp,2,10)==HAL_OK)
		{
		  ambient_tmp = (uint16_t)tmp[1]<<8 | tmp[0];
		  ambient_tmp_cel = (float)ambient_tmp * 0.02;
		  ambient_tmp_celsult = ambient_tmp_cel - 273.15;
		}
	  if(HAL_I2C_Mem_Read(&hi2c1,(0x5A)<<1,0x07,1,tmp,2,10)==HAL_OK)
		{
		obj_tmp = (uint16_t)tmp[1]<<8 | tmp[0];
		obj_tmp_cel = (float)obj_tmp * 0.02;
		obj_tmp_celsult = obj_tmp_cel - 273.15;
		}
	  len = sprintf(buf, "Ambient: %.2f\n,Object:%.2f \n\r", ambient_tmp_celsult, obj_tmp_celsult);
	  HAL_UART_Transmit(&huart3, (uint8_t*)buf, len, 10);
	  HAL_Delay(500);
    /* USER CODE BEGIN 3 */
  }
  /* USER CODE END 3 */
}



/* USER CODE BEGIN 4 */
uint8_t crc8(uint8_t InCrc, uint8_t InData)
{
	uint8_t i;
	uint8_t Data;
	Data = InCrc ^= InData;
	for ( i = 0; i < 8; i++ )
	{
		if (( Data & 0x80 ) != 0 )
		{
			Data <<= 1;
			Data ^= 0x07;
		}
		else
		{
			Data <<= 1;
		}
	}
	return Data;
}
/* USER CODE END 4 */